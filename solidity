// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {
    string public tokenName;
    string public tokenAbbrv;
    uint256 public totalSupply;
    mapping(address => uint256) public balanceOf;

    constructor(string memory _tokenName, string memory _tokenAbbrv, uint256 _totalSupply) {
        tokenName = _tokenName;
        tokenAbbrv = _tokenAbbrv;
        totalSupply = _totalSupply;
        balanceOf[msg.sender] = totalSupply;
    }

    function mint(address _to, uint256 _value) external {
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");
        totalSupply += _value;
        balanceOf[_to] += _value;
        balanceOf[msg.sender] -= _value;
    }

    function burn(address _from, uint256 _value) external {
        require(balanceOf[_from] >= _value, "Insufficient balance");
        totalSupply -= _value;
        balanceOf[_from] -= _value;
    }
}
